name: Test and setup lighty application

on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      test-script-file:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: 'v1.24.0'
          kubernetes version: 'v1.22.4'
      - name: Start Minikube cluster
        run: minikube start
      - name: Install helm v3.6.2
        uses: azure/setup-helm@v1.1
        with:
          version: '3.7.1'
      - name: Install socat
        run: |
          sudo apt-get -y install socat
        shell: bash
      - name: Helm version
        run: helm version
        shell: bash
      - name: Kubernetes version
        run: minikube kubectl -- version
        shell: bash
      - name: Maven install + build docker image
        run: mvn install -B -Pdocker -DskipTests
        shell: bash
      - name: Start ${{ inputs.app-name }} in docker container
        run: |
          echo "Exporting Docker image to .tar ..."
          image_name=$(mvn help:evaluate -f lighty-applications/${{ inputs.app-name }}-aggregator/${{ inputs.app-name }}-docker/pom.xml -Dexpression=image.name -q -DforceStdout)
          docker save --output="./${{ inputs.app-name }}.tar" $image_name
          echo "Loading docker image to minikube"
          docker load --input ./${{ inputs.app-name }}.tar
          rm ./${{ inputs.app-name }}.tar
        shell: bash
      - name: Install app helm chart
        run: |
          helm install ${{ inputs.app-name }} lighty-applications/${{ inputs.app-name }}-aggregator/${{ inputs.app-name }}-helm/helm/${{ inputs.app-name }}-helm
          sleep 35 # Wait for app to start
        shell: bash
      - name: Run apps testing scripts
        run: |
          chmod +x "${{ inputs.test-script-file }}"
          # run script
          "${{ inputs.test-script-file }}"
        shell: bash