apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lighty-rcgnmi-app-helm.fullname" . }}
  labels:
    {{- include "lighty-rcgnmi-app-helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.lighty.replicaCount }}
  selector:
    matchLabels:
      {{- include "lighty-rcgnmi-app-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lighty-rcgnmi-app-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.deploymentSecurity.usePodSecurity }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.deploymentSecurity.runAsUser }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [ "-c","{{ .Values.lighty.configDirectoryName }}/{{ .Values.lighty.configFilename }}",
                  "-l","{{ .Values.lighty.configDirectoryName }}/{{ .Values.lighty.loggerConfigFilename }}"]
          volumeMounts:
            - name: config-volume
              mountPath: {{ .Values.lighty.workdir }}/{{ .Values.lighty.configDirectoryName }}
          {{- if .Values.deploymentSecurity.useContainerSecurity }}
          securityContext:
            allowPrivilegeEscalation: true
            runAsUser: {{ .Values.deploymentSecurity.runAsUser }}
            capabilities:
              drop:
                - all
              add: {{ .Values.deploymentSecurity.useCapabilities }}
          {{- end }}
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            {{- if .Values.lighty.jmx.enableJmxRemoting }}
            - name: JAVA_OPTS
              value: "-Dcom.sun.management.jmxremote
                      -Dcom.sun.management.jmxremote.authenticate=false
                      -Dcom.sun.management.jmxremote.ssl=false
                      -Dcom.sun.management.jmxremote.local.only=false
                      -Dcom.sun.management.jmxremote.port={{ .Values.lighty.jmx.jmxPort }}
                      -Dcom.sun.management.jmxremote.rmi.port={{ .Values.lighty.jmx.jmxPort }}
                      -Djava.rmi.server.hostname=127.0.0.1"
            {{- end }}
          ports:
            # akka remoting
            - name: remoting
              containerPort: {{ .Values.lighty.akka.remotingPort }}
              protocol: TCP
            # When
            # akka.management.cluster.bootstrap.contact-point-discovery.port-name
            # is defined, it must correspond to this name:
            - name: management
              containerPort: {{ .Values.lighty.akka.managementPort }}
              protocol: TCP
            # restconf port
            - name: restconf
              containerPort: {{ .Values.lighty.restconf.restconfPort }}
              protocol: TCP
              {{- if .Values.lighty.jmx.enableJmxRemoting }}
              # JMX port on which JMX server is listening
            - name: jmx
              containerPort: {{ .Values.lighty.jmx.jmxPort }}
              protocol: TCP
              {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "lighty-rcgnmi-app-helm.fullname" . }}
